{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-gatsby-blog-1-index-mdx-8cd581c16cc5ea136b98.js","mappings":"kNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,EAAG,IACHC,IAAK,MACLC,KAAM,SACLC,EAAAA,EAAAA,MAAsBT,EAAMU,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,yEAA0E,KAAMO,EAAAA,cAAoBV,EAAYI,GAAI,KAAM,cAAe,KAAMM,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,4HAA6H,KAAMO,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,gFAAiFO,EAAAA,cAAoBV,EAAYK,EAAG,CAChjBM,KAAM,oDACL,sBAAuB,8JAA+JD,EAAAA,cAAoBV,EAAYK,EAAG,CAC1NM,KAAM,2DACL,+BAAgC,iBAAkB,KAAMD,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,4CAA6C,KAAMO,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,oBAAqB,KAAMO,EAAAA,cAAoBV,EAAYM,IAAK,KAAMI,EAAAA,cAAoBV,EAAYO,KAAM,CAC1SK,UAAW,iBACV,wBAAyB,KAAMF,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,yBAA0B,KAAMO,EAAAA,cAAoBV,EAAYM,IAAK,KAAMI,EAAAA,cAAoBV,EAAYO,KAAM,CAC1LK,UAAW,iBACV,gCAAiC,KAAMF,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,yDAA0D,KAAMO,EAAAA,cAAoBV,EAAYM,IAAK,KAAMI,EAAAA,cAAoBV,EAAYO,KAAM,CAClOK,UAAW,iBACV,yGAA0G,KAAMF,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,0CAA2C,KAAMO,EAAAA,cAAoBV,EAAYM,IAAK,KAAMI,EAAAA,cAAoBV,EAAYO,KAAM,CAC5RK,UAAW,iBACV,qDAAsD,KAAMF,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,wBAAyB,KAAMO,EAAAA,cAAoBV,EAAYM,IAAK,KAAMI,EAAAA,cAAoBV,EAAYO,KAAM,CACtNK,UAAW,iBACV,qcAAsc,KAAMF,EAAAA,cAAoBV,EAAYG,EAAG,KAAM,UAAWO,EAAAA,cAAoBV,EAAYK,EAAG,CACpiBM,KAAM,yBACL,yBAA0B,WAAYD,EAAAA,cAAoBV,EAAYK,EAAG,CAC1EM,KAAM,qCACL,cAAe,qBACpB,CAKA,MAJA,SAAoBZ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOc,QAASC,GAAab,OAAOC,OAAO,CAAC,GAAGM,EAAAA,EAAAA,MAAsBT,EAAMU,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWf,EAAOW,EAAAA,cAAoBZ,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UC9Be,SAASgB,EAAiBhB,GACvC,OAAOW,EAAAA,cAAoBM,EAAAA,EAAejB,EAAOW,EAAAA,cAAoBO,EAAqBlB,GAC5F,CAHAiB,EAAAA,C","sources":["webpack://minimal-blog/./content/posts/gatsby_blog-1/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"창업을 한후 시간이 좀 지났지만, 미루고 미루던 블로그를 GatsbyJS와 Github Pages를 이용하여 만들어 보았다.\"), \"\\n\", React.createElement(_components.h2, null, \"GatsbyJS란?\"), \"\\n\", React.createElement(_components.p, null, \"Gatsbyjs는 React 기반의 정적 페이지 생성 프레임워크로 가장 큰 특징은 Graphql로 사이트 내에 여러정보를 쿼리하여 그 데이터를 HTML, CSS, React로 만들어진 컴포넌트 UI에 뿌릴 수 있다.\"), \"\\n\", React.createElement(_components.p, null, \"GatsbyJS를 선택한 이유는 생태계가 잘 구성되어있고 Gitbub Pages를 이용하여 호스팅을 할 수 있기 때문이다.\\n많은 분들이 \", React.createElement(_components.a, {\n    href: \"https://github.com/JaeYeopHan/gatsby-starter-bee\"\n  }, \"gatsby-starter-bee\"), \"를 추천하고 있는데, 현재 버전의 nodejs(v21.3.0)에선 의존성 해결이 어려워 보여서, GatsbyJS 공식 사이트에 있는 많은 스타터 템플릿 중 내가원하는 레이아웃과 유사하고, 다크모드, SEO(Search Engine Optimization)가 이미 구현되어있는  \", React.createElement(_components.a, {\n    href: \"https://github.com/LekoArts/gatsby-starter-minimal-blog\"\n  }, \"gatsby-starter-minimal-blog\"), \"를 이용하여 구현하였다.\"), \"\\n\", React.createElement(_components.p, null, \"맥을 이용하여 구현하였기 때문에, 맥을 이용하시는 분들을 위한 설명이다.\"), \"\\n\", React.createElement(_components.p, null, \"먼저 nodejs를 설치한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"brew install node\\n\")), \"\\n\", React.createElement(_components.p, null, \"그리고 gatsby-cli를 설치한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"npm install -g gatsby-cli\\n\")), \"\\n\", React.createElement(_components.p, null, \"다음으로 gatsby-starter-minimal-blog 템플릿을 이용하여 블로그를 생성한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"npx gatsby new gatsby-starter-minimal-blog https://github.com/LekoArts/gatsby-starter-minimal-blog\\n\")), \"\\n\", React.createElement(_components.p, null, \"이후 생성된 폴더로 이동하여, gatsby develop을 실행한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"cd gatsby-starter-minimal-blog\\ngatsby develop\\n\")), \"\\n\", React.createElement(_components.p, null, \"그럼 아래와 같이 블로그가 실행된다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"⠀\\nYou can now view minimal-blog in the browser.\\n⠀\\n  http://localhost:8000/\\n⠀\\nView GraphiQL, an in-browser IDE, to explore your site's data and schema\\n⠀\\n  http://localhost:8000/___graphql\\n⠀\\nNote that the development build is not optimized.\\nTo create a production build, use gatsby build\\n⠀\\nsuccess Building development bundle - 1.876s\\nsuccess Writing page-data.json and slice-data.json files to public directory - 0.042s - 1/6 143.90/s\\n\")), \"\\n\", React.createElement(_components.p, null, \"브라우저에서 \", React.createElement(_components.a, {\n    href: \"http://localhost:8000\"\n  }, \"http://localhost:8000\"), \" 로 접속하면 \", React.createElement(_components.a, {\n    href: \"https://minimal-blog.lekoarts.de/\"\n  }, \"개발자 라이브 데모\"), \"와 동일한 화면을 볼 수 있다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/onexenon/Workspace/gatsby-starter-minimal-blog/content/posts/gatsby_blog-1/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","a","pre","code","_provideComponents","components","React","href","className","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}